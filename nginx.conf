worker_processes  auto;
error_log /dev/stdout debug;

events {
	worker_connections 2048;
}

env REDIS_URL;

http {
	access_log /dev/stdout;
    resolver 8.8.8.8;

	upstream flaskserver {
		ip_hash;
		server app-staging;
	}

	upstream logspout {
		ip_hash;
		server logspout-staging;
	}

	server {

		listen 80;
		server_name _;
		# return 301 https://go.3blades.io$request_uri;   
		ssl off; 

		# set client body size to 30M #
		client_max_body_size 30M;

		server_tokens off;

		location ~* /server/logs/(?<serverId>[a-zA-Z0-9]+) {
			set $container "";
			rewrite_by_lua_file container.lua;
			proxy_pass http://logspout/ws-plain/id:$container;
			proxy_redirect off;
			proxy_buffering on;
			proxy_buffer_size  128k;
			proxy_buffers 100  128k;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
		}

		location / {    

			proxy_connect_timeout       1200;
			proxy_send_timeout          1200;
			proxy_read_timeout          1200;
			send_timeout                1200;

			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header X-Forwarded-Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://flaskserver/;

		} 

		location /socket.io {
			proxy_pass http://flaskserver/socket.io;
			proxy_redirect off;
			proxy_buffering on;
			proxy_buffer_size  128k;
			proxy_buffers 100  128k;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
		}


		location ~* /(?<serverType>(workspace|model))/(?<serverId>[a-zA-Z0-9]+) {
			default_type 'text/plain';
			set $server "";
			rewrite_by_lua_file server.lua;
			proxy_pass http://$server/container/$3/tree?$query_string;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-NginX-Proxy true;
			proxy_set_header Origin "";

			# WebSocket support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 186400;
		}


		location ~* /container/(?<serverId>[a-zA-Z0-9]+) {
			set $server "";
			rewrite_by_lua_file server.lua;
			proxy_pass http://$server;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_set_header X-NginX-Proxy true;
			proxy_set_header Origin "";

			# WebSocket support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 186400;

		}
		location ~* /container/(?<serverId>[a-zA-Z0-9]+)/api/ {
			set $server "";
			rewrite_by_lua_file server.lua;
			proxy_pass http://$server;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_set_header X-NginX-Proxy true;
			proxy_set_header Origin "";

			# WebSocket support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 186400;

		}

	}
}
