worker_processes  auto;
error_log /etc/nginx/logs/flask-error.log;

events {
	worker_connections 1024;
}

http {
	access_log /etc/nginx/logs/flask-access.log;

	upstream flaskserver {
		ip_hash;
		server app-staging;
	}
	server {

		listen 80;
		server_name _;
		# return 301 https://go.3blades.io$request_uri;   
		ssl off; 

		# set client body size to 30M #
		client_max_body_size 30M;

		location  ~* /server/ips/(?<serverId>[a-zA-Z0-9]+) {
			set $target "";
			internal;
			default_type 'text/plain';
			proxy_pass http://flaskserver;     
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			set $url_ips '/api/servers/$serverId';
			rewrite_by_lua_block {
				local res = ngx.location.capture(ngx.var.url_ips)
				ngx.log(ngx.NOTICE, res.body)
				local cjson = require "cjson"
				local value = cjson.decode(res.body)
				ngx.var.target = value.server
				ngx.log(ngx.NOTICE, ngx.var.target)
			}
			echo -n $target;
		}

		location / {    

			proxy_connect_timeout       1200;
			proxy_send_timeout          1200;
			proxy_read_timeout          1200;
			send_timeout                1200;

			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header X-Forwarded-Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://flaskserver/;

		} 

		location /socket.io {
			proxy_pass http://flaskserver/socket.io;
			proxy_redirect off;
			proxy_buffering off;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
		}



		location ~* /workspace/(?<workspaceId>[a-zA-Z0-9]+) {
			default_type 'text/plain';
			set $url_ips '/server/ips/$workspaceId';
			set $server "";
			rewrite_by_lua_block {
				local res = ngx.location.capture(ngx.var.url_ips)
				ngx.var.server = res.body
			}
			proxy_pass http://$server/container/$1/tree?$query_string;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-NginX-Proxy true;
			proxy_set_header Origin "";

			# WebSocket support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 186400;
		}

		location ~* /model/(?<modelId>[a-zA-Z0-9]+) {
            resolver 127.0.0.1;
			default_type 'text/plain';
			set $server "";
			rewrite_by_lua_file model.lua;
			proxy_pass http://$server/container/$1/tree?$query_string;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-NginX-Proxy true;
			proxy_set_header Origin "";

			# WebSocket support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 186400;
		}

		location ~* /container/(?<workspaceId>[a-zA-Z0-9]+) {
			set $server "";
			set $url_ips '/server/ips/$workspaceId';
			rewrite_by_lua_block {
				local res = ngx.location.capture(ngx.var.url_ips)
				ngx.var.server = res.body
			}
			proxy_pass http://$server;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_set_header X-NginX-Proxy true;
			proxy_set_header Origin "";

			# WebSocket support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 186400;

		}
		location ~* /container/(?<workspaceId>[a-zA-Z0-9]+)/api/ {
			set $server "";
			set $url_ips '/server/ips/$workspaceId';
			rewrite_by_lua_block {
				local res = ngx.location.capture(ngx.var.url_ips)
				ngx.var.server = res.body
			}
			proxy_pass http://$server;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_set_header X-NginX-Proxy true;
			proxy_set_header Origin "";

			# WebSocket support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 186400;

		}

	}
}
